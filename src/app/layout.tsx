"use client"

import Header from "@/components/Header"
import "./globals.css"
import type { Metadata } from "next"
import { Inter } from "next/font/google"

import { WagmiConfig, configureChains, createConfig } from "wagmi"
import { publicProvider } from "wagmi/providers/public"
import { mainnet, polygonMumbai } from "wagmi/chains"
import { infuraProvider } from "wagmi/providers/infura"
import { PKPEthersWallet } from "@lit-protocol/pkp-ethers"
import { createContext, useState } from "react"
import { AuthMethod, SessionSigs } from "@lit-protocol/types"

// 1. Get projectId
// const projectId = process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID as string

// 2. Create wagmiConfig
const { chains, publicClient } = configureChains(
  [polygonMumbai, mainnet],
  [
    infuraProvider({
      apiKey: process.env.NEXT_PUBLIC_INFURA_API_KEY as string,
    }),
    publicProvider(),
  ]
)

const appData = {
  name: "TheRegistry",
  description: "Web3 Document Issuer/Viewer",
}

const wagmiConfig = createConfig({
  autoConnect: true,
  connectors: [],
  publicClient,
})

const inter = Inter({ subsets: ["latin"] })

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// }

export const WalletContext = createContext({})

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const [authMethod, setAuthMethod] = useState<AuthMethod | undefined>()
  const [pkpWallet, setPkpWallet] = useState<PKPEthersWallet | undefined>()
  const [sessionSigs, setSessionSigs] = useState<SessionSigs | undefined>()

  return (
    <html lang="en">
      <body className={inter.className}>
        <WagmiConfig config={wagmiConfig}>
          <div>
            <WalletContext.Provider
              value={{
                authMethod,
                setAuthMethod,
                pkpWallet,
                setPkpWallet,
                sessionSigs,
                setSessionSigs,
              }}
            >
              {children}
            </WalletContext.Provider>
          </div>
        </WagmiConfig>
      </body>
    </html>
  )
}
